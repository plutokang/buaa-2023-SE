
const int a = 1, b = 2;
int var1 = 3, var2 = 4;
int func0(){
	printf("func returns int\n");
	return 0;
}
void func101(){
	printf("func returns void\n");
	//blockitem
	const int temp = 1;
	printf("blockitem declares %d\n", temp);	
} 
void func200(int num){
	printf("read a num %d",num);
}
int func300(int num1,int num2){
	int ans;
	ans = num1 + num2;
	return ans;
}
int func2(int array[][2], int array2[])
{
    int i;
    for (i = 0; i < 2; i = i + 1)
    {
        array[i][0] = array2[i];
    }
    return 2;
}
void testPrint1()
{
    if (a + var2 == b - var1 && a)
    {
        if (a || !a && b + var1 / 3 + var2 < 0)
        {
            printf("And failed!\n");
        }
        else
        {
            printf("And pass!\n");
        }
    }
    if (var2 != 2 || var1 - 3 == 0)
    {
        if (a % 2 + 3 - 4 * 2 + var1 + var2 <= 100 || b)
        {
            printf("or pass!\n");
        }
    }
    if (a > b)
    {
        printf("testPrint1_1\n");
    }
    else
    {
        printf("testPrint1_2\n");
    }
    if (a + b <= var1 + var2)
    {
        var1 = var1 + var2;
    }
    if (a + b >= var1 + var2)
    {
        printf("testPrint1_3 %d\n", a);
    }
    else
    {
        printf("testPrint1_4 %d\n", b);
    }
    return;
}
void testPrint2(int a, int b)
{
    if (a)
    {
        {
        }
    }
    if (b)
    {
        {
        }
    }
    if (+a)
    {
        return;
    }
    if (-a)
    {
        return;
    }
    if (!a)
    {
        return;
    }
    printf("testPrint2 %d\n", a + b);
    return;
}
int testPrint3(const int a[])
{
    int t = a[0] + a[1];
    return t;
}
int testPrint4(const int a[][2])
{
    int b = a[0][0] + a[0][1] + a[1][0] + a[1][1];
    return b;
}
int testPrint5(int a)
{
    return a;
}
int testPrint6(int a[])
{
    return a[0] * a[1] / a[0];
}
int testPrint7(int a[][2])
{
    return a[0][0] * a[0][1] / a[1][0] + a[1][1];
}
void testEmpty()
{
    return;
}
int testNum()
{
    return 0;
}
int f(int x)
{
    if (x > 0)
        return f(x - 1);
}
int func1(int array[]){
	int i;
	for(i=0;i<2;i=i+1){
		array[i] = 0;
	}
	return 1;
}
int func100(int array[][2],int array2[]){
	int i;
	for(i=0;i<2;i=i+1){
		array[i][0] = array2[i];
	}
	return 2;
}
int func3(int array[][2]){
	int i;
	for(i=0;i<2;i=i+1){
		array[i][0] = 0;
	}
	return 2;
}
int main()
{
    int d = +-(a + b) * 3 / 5;
    int x = 005;
    printf("21373331\n");
    int v;
    // v = getint();
    v = getint();
    const int c = 3;
    f(c);
    ;
    if(!(b == 5)){
        var1 = 5;
	} else{
        var2 = 5;
	}
    const int array1[2] = {1, 2};
    const int array2[2][2] = {{1, 2}, {3, 4}};
    int var3 = 5;
    int varArray1[2] = {1, 2};
    int varArray2[2][2] = {{1, 2}, {3, 4}};
    int var4;
    int varArray3[2];
    int varArray4[2][2];
    testPrint5(var3);
    testPrint6(varArray1);
    testPrint7(varArray2);
    var4 = 4;
    varArray3[0] = a + b * a;
    varArray3[1] = (a + b) * a;
    int i = 0, j = 0;
    varArray4[0][0] = varArray3[0] * varArray3[1];
    int temp = varArray2[0][0];
    int h = varArray3[1];
    for(i = 5 * 4;i >=0;i--)
    {}
    for (i = 0; i < 2; i = i + 1)
    {
        for (; j < 2; j = j + 1)
        {
            varArray4[i][j] = i * 10 + j;
        }
    }
    for (i = 0; i < (a || b); i = i + 1)
    {
        for (; j < 2; j = j + 1)
        {
            varArray4[i][j] = i * 10 + j;
        }
    }
    for (i = 0; i==0; i = i + 1)
    {
        break;
    }
    int varArray5[2];
    for (i = 0;; i++)
    {
        varArray5[0] = varArray4[i][i] * 10 + 5;
        break;
    }
    int k = 5;
    for (i = 0; i < k;)
    {
        varArray5[1] = varArray4[1][1] / 10 + 5;
        break;
    }
    for (i = 0; i < 5; i++)
    {
        continue;
    }
    if (a <= 5)
    {
        if (b >= 0)
        {
            if (var1 > -1)
            {
                if (var2 < 10000)
                {
                    printf("123\n");
                }
            }
        }
    }
    testPrint1();
    testPrint2(var3, c);
    printf("testPrint3  %d\n", testPrint3(array1));
    printf("testPrint4 %d\n", testPrint4(array2));
    testEmpty();
    var3 = 1 * 2 + 3 * (2 - 1);
    var4 = ((2 / 1) + 3) % 2;
    if (1 + 2 * 3)
    {
        var3 = 4 * 5;
    }
    if (!var3)
    {
        printf("varArray3[0] %d \n", varArray3[0]);
    }
    if (testPrint6(varArray1))
    {
    }
    //primaryExp
    printf("varArray4[0][0]:%d\n", varArray4[0][0]);
const int a1 = 5;
int b1;
    int c1,d1;
    ; 
    c1 = getint();
    //stmt
    //ifelse
    b1 = 5;
	if(b1 > 5){
    	printf("bolck out of block\n");
	}
	if(!(b1 == 5)){
		printf("if and else");
	} else{
		printf("else");
	}
	for(;b1>0;b1 = b1-1){
		if(b1 == 4){
			continue;
		}
        break;
	}
	for(b1=1;;b1=b1-1){
		if(b1 == 0){
			break;
		}
	}
	for(b1=3;b1>0;){
		b1 = b1 - 1;
	}
	func0();
	func101();
	func200(c1);
	d1 = func300(b1,c1);
	//primaryExp
	d1 = (a1 - b1);
	d1 = a1;
    for(;;){
    	i = i - 1;
    	if(i <= -1){
    		break;
		}
	}
	i = 3;
	for(;;i = i-1){
		if(i < 0){
			break;
		}
	}
	i =3;
	for(;i>0;){
		i = i-1;
	}
	for(i = 3;;){
		if (i < 0){
			break;
		}
		i = i - 1;
	}
    return 0;
}